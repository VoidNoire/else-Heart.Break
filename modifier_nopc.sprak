############
### main ###
############
bool Allow(string target, number level)
	if supply("GetTypeOfThing").GetTypeOfThing(target) == "door"
		# Hotel_Lobby_ComputerCashier can be replaced with the name of any other computer with the Memory API enabled and lock_state can be replaced with any other name you wish to use instead. Be sure to replace all occurences in the modifier's code.
		if supply("LoadMemory").LoadMemory(target + "_lock_state") != "unlocked" 
			supply("Unlock").Unlock(target)
			Connect(target).Say(target + " unlocked.")
			supply("SaveMemory").SaveMemory(target + "_lock_state", "unlocked")
		else
			supply("Lock").Lock(target)
			Connect(target).Say(target + " locked.")
			supply("SaveMemory").SaveMemory("lock_state", "locked")
		end
	end
	return true
end

#################
### functions ###
#################
# returns the required thing that provides a function
array thingwiththefunction(string function)
	string locktoggler = "Hotel_Lobby_ComputerCashier"
	string supercomputer = "PoliceOfficeInterior_MinistryOfficeWorkstationComputer_1"
	string memorystore = "Hotel_Lobby_ComputerCashier"
	string thingwithcopytoclipboard = "Hotel_ServerBasement_Extractor_1"
	string thingwithgettypeofthing = supercomputer
	string thingwithloadmemory = memorystore
	string thingwithlock = locktoggler
	string thingwithsavememory = memorystore
	string thingwithunlock = locktoggler

	if function == "CopyToClipboard"
		return thingwithcopytoclipboard
	end
	if function == "GetTypeOfThing"
		return thingwithgettypeofthing
	end
	if function == "LoadMemory"
		return thingwithloadmemory
	end
	if function == "Lock"
		return thingwithlock
	end
	if function == "SaveMemory"
		return thingwithsavememory
	end
	if function == "Unlock"
		return thingwithunlock
	end
end

# returns the proper prefix that supplies a function
string supply(string function)
	return Connect(thingwiththefunction(function))
end
